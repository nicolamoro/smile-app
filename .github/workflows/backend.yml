name: Deploy backend to ECS

on:
  push:
    branches:
      - master
    paths:
      - backend/**
      - infrastructure/**

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2
          
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Check import sorting with isort
        working-directory: backend
        run: |
          isort --multi-line=3 --trailing-comma --check-only --diff --stdout src/

      - name: Lint with black
        working-directory: backend
        run: |
          black --line-length=120 --check --diff src/

      - name: Lint with flake8
        working-directory: backend
        run: |
          flake8 --extend-ignore=E203 --max-complexity=10 --max-line-length=120 src/

  build:
    needs: tests
    name: Build backend image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push backend image
        id: build-backend-image
        working-directory: backend
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: smile-app-backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new backend image ID in the Amazon ECS task definition
        id: task-def-backend
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: infrastructure/task-definition.json
          container-name: smile-app-backend
          image: ${{ steps.build-backend-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-backend.outputs.task-definition }}
          service: smile-app-backend-service
          cluster: smile-app-backend-cluster
          wait-for-service-stability: true
